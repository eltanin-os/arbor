diff -Naur a/libpkgconf/bsdstubs.c b/libpkgconf/bsdstubs.c
--- a/libpkgconf/bsdstubs.c	2023-05-02 16:11:10.000000000 -0300
+++ b/libpkgconf/bsdstubs.c	2024-02-13 10:04:19.203012993 -0300
@@ -25,14 +25,13 @@
 #include <libpkgconf/bsdstubs.h>
 #include <libpkgconf/config.h>
 
-#if !HAVE_DECL_STRLCPY
 /*
  * Copy src to string dst of size siz.  At most siz-1 characters
  * will be copied.  Always NUL terminates (unless siz == 0).
  * Returns strlen(src); if retval >= siz, truncation occurred.
  */
 static inline size_t
-strlcpy(char *dst, const char *src, size_t siz)
+_strlcpy(char *dst, const char *src, size_t siz)
 {
 	char *d = dst;
 	const char *s = src;
@@ -56,9 +55,7 @@
 
 	return(s - src - 1);	/* count does not include NUL */
 }
-#endif
 
-#if !HAVE_DECL_STRLCAT
 /*
  * Appends src to string dst of size siz (unlike strncat, siz is the
  * full size of dst, not space left).  At most siz-1 characters
@@ -67,7 +64,7 @@
  * If retval >= siz, truncation occurred.
  */
 static inline size_t
-strlcat(char *dst, const char *src, size_t siz)
+_strlcat(char *dst, const char *src, size_t siz)
 {
 	char *d = dst;
 	const char *s = src;
@@ -93,7 +90,6 @@
 
 	return(dlen + (s - src));	/* count does not include NUL */
 }
-#endif
 
 /*
  * Copyright (c) 2012 William Pitcock <nenolod@dereferenced.org>.
@@ -107,41 +103,38 @@
  * from the use of this software.
  */
 
-#if !HAVE_DECL_STRNDUP
 /*
  * Creates a memory buffer and copies at most 'len' characters to it.
  * If 'len' is less than the length of the source string, truncation occured.
  */
 static inline char *
-strndup(const char *src, size_t len)
+_strndup(const char *src, size_t len)
 {
 	char *out = malloc(len + 1);
 	pkgconf_strlcpy(out, src, len + 1);
 	return out;
 }
-#endif
 
 size_t
 pkgconf_strlcpy(char *dst, const char *src, size_t siz)
 {
-	return strlcpy(dst, src, siz);
+	return _strlcpy(dst, src, siz);
 }
 
 size_t
 pkgconf_strlcat(char *dst, const char *src, size_t siz)
 {
-	return strlcat(dst, src, siz);
+	return _strlcat(dst, src, siz);
 }
 
 char *
 pkgconf_strndup(const char *src, size_t len)
 {
-	return strndup(src, len);
+	return _strndup(src, len);
 }
 
-#if !HAVE_DECL_REALLOCARRAY
-void *
-reallocarray(void *ptr, size_t m, size_t n)
+static inline void *
+_reallocarray(void *ptr, size_t m, size_t n)
 {
 	if (n && m > -1 / n)
 	{
@@ -151,10 +144,9 @@
 
 	return realloc(ptr, m * n);
 }
-#endif
 
 void *
 pkgconf_reallocarray(void *ptr, size_t m, size_t n)
 {
-	return reallocarray(ptr, m, n);
+	return _reallocarray(ptr, m, n);
 }
